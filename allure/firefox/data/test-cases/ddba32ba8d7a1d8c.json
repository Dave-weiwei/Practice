{"uid":"ddba32ba8d7a1d8c","name":"test_input_default[default-submit-status-text]","fullName":"tests.test_check_default#test_input_default","historyId":"f9c006badc30055cc19ce02f60641ca0","time":{"start":1753369938903,"stop":1753369938903,"duration":0},"status":"broken","statusMessage":"ValueError: response body:\n{\"message\":\"API rate limit exceeded for 68.220.61.163. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\n\nrequest url:\nhttps://api.github.com/repos/mozilla/geckodriver/releases/latest\nresponse headers:\n{'Date': 'Thu, 24 Jul 2025 15:12:18 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1753371218', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '279', 'X-GitHub-Request-Id': 'A7C0:163CDF:1A93C5:1B653A:68824D52'}","statusTrace":"request = <SubRequest 'driver' for <Function test_default_check[heading-main-exists]>>\n\n    @pytest.fixture(scope=\"module\")\n    def driver(request):\n        browser = request.config.getoption(\"--mybrowser\")\n    \n        if browser == \"chrome\":\n            chrome_options = ChromeOptions()\n            chrome_options.add_argument(\"--headless\")\n            chrome_options.add_argument(\"--no-sandbox\")\n            chrome_options.add_argument(\"--disable-dev-shm-usage\")\n            chrome_options.add_argument(\"--disable-gpu\")  # 雖然在 headless 模式 GPU 不重要，但仍建議加\n            chrome_options.add_argument(\"--disable-infobars\")\n            chrome_options.add_argument(\"--window-size=1920,1080\")\n            service = ChromeService(ChromeDriverManager().install())\n            driver = webdriver.Chrome(service=service, options=chrome_options)\n        elif browser == \"firefox\":\n            firefox_options = FirefoxOptions()\n            firefox_options.add_argument(\"--headless\")\n>           service = FirefoxService(GeckoDriverManager().install())\n                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/conftest.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/firefox.py:39: in install\n    driver_path = self._get_driver_binary_path(self.driver)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/manager.py:35: in _get_driver_binary_path\n    binary_path = self._cache_manager.find_driver(driver)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/driver_cache.py:107: in find_driver\n    driver_version = self.get_cache_key_driver_version(driver)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/driver_cache.py:154: in get_cache_key_driver_version\n    return driver.get_driver_version_to_download()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/driver.py:48: in get_driver_version_to_download\n    return self.get_latest_release_version()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/drivers/firefox.py:29: in get_latest_release_version\n    resp = self._http_client.get(\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/http.py:36: in get\n    self.validate_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [403]>\n\n    @staticmethod\n    def validate_response(resp: requests.Response):\n        status_code = resp.status_code\n        if status_code == 404:\n            raise ValueError(f\"There is no such driver by url {resp.url}\")\n        elif status_code == 401:\n            raise ValueError(f\"API Rate limit exceeded. You have to add GH_TOKEN!!!\")\n        elif resp.status_code != 200:\n>           raise ValueError(\n                f\"response body:\\n{resp.text}\\n\"\n                f\"request url:\\n{resp.request.url}\\n\"\n                f\"response headers:\\n{dict(resp.headers)}\\n\"\n            )\nE           ValueError: response body:\nE           {\"message\":\"API rate limit exceeded for 68.220.61.163. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\nE           \nE           request url:\nE           https://api.github.com/repos/mozilla/geckodriver/releases/latest\nE           response headers:\nE           {'Date': 'Thu, 24 Jul 2025 15:12:18 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1753371218', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '279', 'X-GitHub-Request-Id': 'A7C0:163CDF:1A93C5:1B653A:68824D52'}\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/http.py:19: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753369937736,"stop":1753369938557,"duration":821},"status":"broken","statusMessage":"ValueError: response body:\n{\"message\":\"API rate limit exceeded for 68.220.61.163. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\n\nrequest url:\nhttps://api.github.com/repos/mozilla/geckodriver/releases/latest\nresponse headers:\n{'Date': 'Thu, 24 Jul 2025 15:12:18 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1753371218', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '279', 'X-GitHub-Request-Id': 'A7C0:163CDF:1A93C5:1B653A:68824D52'}\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Practice/Practice/tests/conftest.py\", line 37, in driver\n    service = FirefoxService(GeckoDriverManager().install())\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/firefox.py\", line 39, in install\n    driver_path = self._get_driver_binary_path(self.driver)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/manager.py\", line 35, in _get_driver_binary_path\n    binary_path = self._cache_manager.find_driver(driver)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/driver_cache.py\", line 107, in find_driver\n    driver_version = self.get_cache_key_driver_version(driver)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/driver_cache.py\", line 154, in get_cache_key_driver_version\n    return driver.get_driver_version_to_download()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/driver.py\", line 48, in get_driver_version_to_download\n    return self.get_latest_release_version()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/drivers/firefox.py\", line 29, in get_latest_release_version\n    resp = self._http_client.get(\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/http.py\", line 36, in get\n    self.validate_response(resp)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/webdriver_manager/core/http.py\", line 19, in validate_response\n    raise ValueError(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_default"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"3709-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_default"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"by","value":"'id'"},{"name":"expected","value":"''"},{"name":"source","value":"'text'"},{"name":"target","value":"'submit-status'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ddba32ba8d7a1d8c.json","parameterValues":["'id'","''","'text'","'submit-status'"]}