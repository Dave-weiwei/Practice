{"uid":"988df792a8ae1b3c","name":"test_reg[password-confirm-mismatch]","fullName":"tests.test_reg#test_reg","historyId":"94613779c6b98d5343542fd12f3374fc","time":{"start":1753172777054,"stop":1753172777928,"duration":874},"status":"failed","statusMessage":"AssertionError: 預期註冊失敗，但資料竟然寫入資料庫了\nassert ('asdasd@gmail.com', 'OK123123ok') is None","statusTrace":"driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"3641dba5-1efa-472a-bd8d-e65eb4d13a31\")>\nuser = 'asdasd@gmail.com', pwd = 'OK123123ok', confirm = 'NOT_MATCH'\nexpected = False\nrequest = <FixtureRequest for <Function test_reg[password-confirm-mismatch]>>\n\n    @pytest.mark.parametrize(\"user, pwd, confirm, expected\", params_input)\n    \n    \n    def test_reg(driver, user, pwd, confirm, expected,request):\n        page=IndexPage(driver)\n        page.open()\n    \n        def do_test():\n            reg_result=page.reg(user, pwd, confirm)\n            assert reg_result == expected\n            result = query_user_and_password(user, pwd)\n            if reg_result:\n                # 驗證是否寫入資料庫\n                assert result is not None, \"應該成功註冊，但資料庫找不到\"\n                assert result[0] == user\n                assert result[1] == pwd\n            else:\n                assert result is None, \"預期註冊失敗，但資料竟然寫入資料庫了\"\n    \n                # 測試後刪除資料\n            if result:\n                delete_user(user)\n    \n        pic = extract_parametrize_id(request)\n>       use_try(driver, do_test, pic)\n\ntests/test_reg.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscr/for_try.py:33: in use_try\n    raise e  # 將錯誤拋出給 pytest 判斷為失敗\n    ^^^^^^^\nscr/for_try.py:15: in use_try\n    func()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def do_test():\n        reg_result=page.reg(user, pwd, confirm)\n        assert reg_result == expected\n        result = query_user_and_password(user, pwd)\n        if reg_result:\n            # 驗證是否寫入資料庫\n            assert result is not None, \"應該成功註冊，但資料庫找不到\"\n            assert result[0] == user\n            assert result[1] == pwd\n        else:\n>           assert result is None, \"預期註冊失敗，但資料竟然寫入資料庫了\"\nE           AssertionError: 預期註冊失敗，但資料竟然寫入資料庫了\nE           assert ('asdasd@gmail.com', 'OK123123ok') is None\n\ntests/test_reg.py:28: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753172765504,"stop":1753172767442,"duration":1938},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 預期註冊失敗，但資料竟然寫入資料庫了\nassert ('asdasd@gmail.com', 'OK123123ok') is None","statusTrace":"driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"3641dba5-1efa-472a-bd8d-e65eb4d13a31\")>\nuser = 'asdasd@gmail.com', pwd = 'OK123123ok', confirm = 'NOT_MATCH'\nexpected = False\nrequest = <FixtureRequest for <Function test_reg[password-confirm-mismatch]>>\n\n    @pytest.mark.parametrize(\"user, pwd, confirm, expected\", params_input)\n    \n    \n    def test_reg(driver, user, pwd, confirm, expected,request):\n        page=IndexPage(driver)\n        page.open()\n    \n        def do_test():\n            reg_result=page.reg(user, pwd, confirm)\n            assert reg_result == expected\n            result = query_user_and_password(user, pwd)\n            if reg_result:\n                # 驗證是否寫入資料庫\n                assert result is not None, \"應該成功註冊，但資料庫找不到\"\n                assert result[0] == user\n                assert result[1] == pwd\n            else:\n                assert result is None, \"預期註冊失敗，但資料竟然寫入資料庫了\"\n    \n                # 測試後刪除資料\n            if result:\n                delete_user(user)\n    \n        pic = extract_parametrize_id(request)\n>       use_try(driver, do_test, pic)\n\ntests/test_reg.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscr/for_try.py:33: in use_try\n    raise e  # 將錯誤拋出給 pytest 判斷為失敗\n    ^^^^^^^\nscr/for_try.py:15: in use_try\n    func()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def do_test():\n        reg_result=page.reg(user, pwd, confirm)\n        assert reg_result == expected\n        result = query_user_and_password(user, pwd)\n        if reg_result:\n            # 驗證是否寫入資料庫\n            assert result is not None, \"應該成功註冊，但資料庫找不到\"\n            assert result[0] == user\n            assert result[1] == pwd\n        else:\n>           assert result is None, \"預期註冊失敗，但資料竟然寫入資料庫了\"\nE           AssertionError: 預期註冊失敗，但資料竟然寫入資料庫了\nE           assert ('asdasd@gmail.com', 'OK123123ok') is None\n\ntests/test_reg.py:28: AssertionError","steps":[],"attachments":[{"uid":"b02df7972eccb8dd","name":"password-confirm-mismatch","source":"b02df7972eccb8dd.png","type":"image/png","size":31890},{"uid":"456c32d5c35924bb","name":"stdout","source":"456c32d5c35924bb.txt","type":"text/plain","size":287}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1753172778950,"stop":1753172779607,"duration":657},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_reg"},{"name":"host","value":"fv-az2233-793"},{"name":"thread","value":"4505-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_reg"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"confirm","value":"'NOT_MATCH'"},{"name":"expected","value":"False"},{"name":"pwd","value":"'OK123123ok'"},{"name":"user","value":"'asdasd@gmail.com'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"988df792a8ae1b3c.json","parameterValues":["'NOT_MATCH'","False","'OK123123ok'","'asdasd@gmail.com'"]}